<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://7vidhan.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://7vidhan.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-07-12T05:11:30+00:00</updated><id>https://7vidhan.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Graphs</title><link href="https://7vidhan.github.io/blog/2025/Graphs/" rel="alternate" type="text/html" title="Graphs"/><published>2025-01-24T00:00:00+00:00</published><updated>2025-01-24T00:00:00+00:00</updated><id>https://7vidhan.github.io/blog/2025/Graphs</id><content type="html" xml:base="https://7vidhan.github.io/blog/2025/Graphs/"><![CDATA[<h2 id="what-is-a-graph">What is a Graph?</h2> <p>A graph is a way to show how things (called nodes) are connected to each other through relationships (called edges). You can also store extra information about each node, edge, or even the whole graph to describe them better. Graphs are very flexible and can represent many kinds of real-world connections. Don‚Äôt worry if this sounds abstract ‚Äî we‚Äôll look at clear examples in the next section.</p> <p>You‚Äôve probably seen graphs before in things like social networks. But graphs are much more powerful and can represent many kinds of data. For example, even images and text ‚Äî which might not seem like graphs at first ‚Äî can be modeled this way. By looking at them as graphs, we can discover patterns and structures that aren‚Äôt obvious, and build an intuition for understanding other, less regular types of graph data.</p> <h2 id="what-does-a-graph-looks-like">What does a Graph looks like?</h2> <p>One cool way to see how a graph‚Äôs nodes are connected is with something called an adjacency matrix. Here, we‚Äôve taken a tiny 4√ó4 image (just 16 pixels) and shown how the nodes (pixels) link up in a grid. Each cell in the matrix tells you if two nodes are connected. The three views below ‚Äî the grid, the matrix, and the graph ‚Äî are just different ways of looking at the same data.</p> <div class="container"> <div class="row"> <div class="panel"> <div>Image Pixels</div> <svg id="grid" width="300" height="200" style="background:#fff;"></svg> </div> <div class="panel"> <div>Adjacency Matrix</div> <svg id="matrix" width="300" height="200" style="background:#fff;"></svg> </div> </div> <div class="row"> <div class="panel"> <div>Graph</div> <svg id="graph" width="300" height="200" style="background:#fff;"></svg> </div> </div> </div> <script src="https://d3js.org/d3.v7.min.js"></script> <link rel="stylesheet" href="/assets/css/graph/styles.css"/> <script src="/assets/js/graph/script.js"></script> <hr/> <h2 id="how-to-create-a-graph-data-structure">How to create a graph data structure?</h2> <p>Okay, let‚Äôs get hands-on. Building a graph isn‚Äôt scary ‚Äî it‚Äôs just about figuring out how to store nodes (the ‚Äúdots‚Äù) and edges (the ‚Äúlines‚Äù connecting them).</p> <p>We‚Äôll walk through this step by step:</p> <h3 id="storing-nodes">Storing Nodes</h3> <p>In most cases, we don‚Äôt need a fancy structure for nodes. You can just store them in a list or set. For example:</p> <figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="o">&lt;</span><span class="nx">d</span><span class="o">-</span><span class="nx">code</span> <span class="nx">block</span> <span class="nx">language</span><span class="o">=</span><span class="dl">"</span><span class="s2">javascript</span><span class="dl">"</span><span class="o">&gt;</span>
    <span class="err">#</span> <span class="nx">Let</span><span class="dl">'</span><span class="s1">s define our nodes
    nodes = ["A", "B", "C", "D"]
    print("Nodes:", nodes)
&lt;/d-code&gt;</span></code></pre></figure> <h3 id="representing-connections-adjacency-matrix">Representing Connections (Adjacency Matrix)</h3> <p>Once you‚Äôve got nodes, you need to show which ones are connected.</p> <p>An adjacency matrix is like a big grid. Each row and column represents a node. If two nodes are connected, we put 1; otherwise, 0.</p> <figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="o">&lt;</span><span class="nx">d</span><span class="o">-</span><span class="nx">code</span> <span class="nx">block</span> <span class="nx">language</span><span class="o">=</span><span class="dl">"</span><span class="s2">html</span><span class="dl">"</span><span class="o">&gt;</span>
    <span class="err">#</span> <span class="nx">Create</span> <span class="nx">adjacency</span> <span class="nx">matrix</span> <span class="k">for</span> <span class="mi">4</span> <span class="nx">nodes</span>
    <span class="err">#</span> <span class="nx">A</span> <span class="o">--</span> <span class="nx">B</span>
    <span class="err">#</span> <span class="o">|</span>    <span class="o">|</span>
    <span class="err">#</span> <span class="nx">C</span> <span class="o">--</span> <span class="nx">D</span>
    <span class="nx">adj_matrix</span> <span class="o">=</span> <span class="p">[</span>
        <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span>  <span class="err">#</span> <span class="nx">Connections</span> <span class="k">for</span> <span class="nx">A</span>
        <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span>  <span class="err">#</span> <span class="nx">Connections</span> <span class="k">for</span> <span class="nx">B</span>
        <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span>  <span class="err">#</span> <span class="nx">Connections</span> <span class="k">for</span> <span class="nx">C</span>
        <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span>  <span class="err">#</span> <span class="nx">Connections</span> <span class="k">for</span> <span class="nx">D</span>
    <span class="p">]</span>
<span class="o">&lt;</span><span class="sr">/d-code&gt;</span></code></pre></figure> <p>This matrix says:</p> <p><strong>Connections:</strong></p> <ul> <li>A ‚Üí B, C</li> <li>B ‚Üí A, D</li> <li>C ‚Üí A, D</li> <li>D ‚Üí B, C</li> </ul> <h3 id="traversing-the-graph-visiting-nodes">Traversing the Graph (Visiting Nodes)</h3> <p>Now let‚Äôs say you want to walk through your graph ‚Äî maybe to find all nodes or paths. Two popular ways are:</p> <h3 id="Ô∏è-depth-first-search-dfs">üï∏Ô∏è Depth-First Search (DFS)</h3> <p>Think of it like exploring as far as possible down one path before backtracking.</p> <figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="o">&lt;</span><span class="nx">d</span><span class="o">-</span><span class="nx">code</span> <span class="nx">block</span> <span class="nx">language</span><span class="o">=</span><span class="dl">"</span><span class="s2">html</span><span class="dl">"</span><span class="o">&gt;</span>
    <span class="nx">def</span> <span class="nf">dfs</span><span class="p">(</span><span class="nx">node</span><span class="p">,</span> <span class="nx">visited</span><span class="p">):</span>
        <span class="k">if</span> <span class="nx">node</span> <span class="nx">not</span> <span class="k">in</span> <span class="nx">visited</span><span class="p">:</span>
            <span class="nf">print</span><span class="p">(</span><span class="dl">"</span><span class="s2">Visiting:</span><span class="dl">"</span><span class="p">,</span> <span class="nx">node</span><span class="p">)</span>
            <span class="nx">visited</span><span class="p">.</span><span class="nf">add</span><span class="p">(</span><span class="nx">node</span><span class="p">)</span>
            <span class="k">for</span> <span class="nx">neighbor</span><span class="p">,</span> <span class="nx">connected</span> <span class="k">in</span> <span class="nf">enumerate</span><span class="p">(</span><span class="nx">adj_matrix</span><span class="p">[</span><span class="nx">node</span><span class="p">]):</span>
                <span class="k">if</span> <span class="nx">connected</span><span class="p">:</span>
                    <span class="nf">dfs</span><span class="p">(</span><span class="nx">neighbor</span><span class="p">,</span> <span class="nx">visited</span><span class="p">)</span>

    <span class="nx">visited</span> <span class="o">=</span> <span class="nf">set</span><span class="p">()</span>
    <span class="nf">dfs</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nx">visited</span><span class="p">)</span>  <span class="err">#</span> <span class="nx">Start</span> <span class="nx">at</span> <span class="nx">node</span> <span class="mi">0</span> <span class="p">(</span><span class="nx">A</span><span class="p">)</span>
<span class="o">&lt;</span><span class="sr">/d-code&gt;</span></code></pre></figure> <h3 id="-breadth-first-search-bfs">üåä Breadth-First Search (BFS)</h3> <p>This one explores level by level ‚Äî like ripples in water.</p> <figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="o">&lt;</span><span class="nx">d</span><span class="o">-</span><span class="nx">code</span> <span class="nx">block</span> <span class="nx">language</span><span class="o">=</span><span class="dl">"</span><span class="s2">html</span><span class="dl">"</span><span class="o">&gt;</span>
    <span class="nx">def</span> <span class="nf">bfs</span><span class="p">(</span><span class="nx">start</span><span class="p">):</span>
        <span class="nx">visited</span> <span class="o">=</span> <span class="nf">set</span><span class="p">()</span>
        <span class="nx">queue</span> <span class="o">=</span> <span class="nf">deque</span><span class="p">([</span><span class="nx">start</span><span class="p">])</span>

        <span class="k">while</span> <span class="nx">queue</span><span class="p">:</span>
            <span class="nx">node</span> <span class="o">=</span> <span class="nx">queue</span><span class="p">.</span><span class="nf">popleft</span><span class="p">()</span>
            <span class="k">if</span> <span class="nx">node</span> <span class="nx">not</span> <span class="k">in</span> <span class="nx">visited</span><span class="p">:</span>
                <span class="nf">print</span><span class="p">(</span><span class="dl">"</span><span class="s2">Visiting:</span><span class="dl">"</span><span class="p">,</span> <span class="nx">node</span><span class="p">)</span>
                <span class="nx">visited</span><span class="p">.</span><span class="nf">add</span><span class="p">(</span><span class="nx">node</span><span class="p">)</span>
                <span class="k">for</span> <span class="nx">neighbor</span><span class="p">,</span> <span class="nx">connected</span> <span class="k">in</span> <span class="nf">enumerate</span><span class="p">(</span><span class="nx">adj_matrix</span><span class="p">[</span><span class="nx">node</span><span class="p">]):</span>
                    <span class="k">if</span> <span class="nx">connected</span> <span class="nx">and</span> <span class="nx">neighbor</span> <span class="nx">not</span> <span class="k">in</span> <span class="nx">visited</span><span class="p">:</span>
                        <span class="nx">queue</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="nx">neighbor</span><span class="p">)</span>

    <span class="nf">bfs</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>  <span class="err">#</span> <span class="nx">Start</span> <span class="nx">at</span> <span class="nx">node</span> <span class="mi">0</span> <span class="p">(</span><span class="nx">A</span><span class="p">)</span>
<span class="o">&lt;</span><span class="sr">/d-code&gt;</span></code></pre></figure> <p>With this basic setup, you can start doing cool stuff like finding paths, checking if your graph is connected, or even visualizing it.</p>]]></content><author><name></name></author><category term="math"/><summary type="html"><![CDATA[Let‚Äôs break down how to make and use graphs ‚Äî the building blocks of networks.structure]]></summary></entry><entry><title type="html">PINNs</title><link href="https://7vidhan.github.io/blog/2025/PINNs/" rel="alternate" type="text/html" title="PINNs"/><published>2025-01-22T00:00:00+00:00</published><updated>2025-01-22T00:00:00+00:00</updated><id>https://7vidhan.github.io/blog/2025/PINNs</id><content type="html" xml:base="https://7vidhan.github.io/blog/2025/PINNs/"><![CDATA[<h2 id="2d-heat-equation">2D Heat Equation</h2> <p>In the case of the 2D heat equation, which describes how heat diffuses through a two-dimensional surface over time, a PINN can learn the temperature distribution across space and time by minimizing the residual of the heat equation at sampled points in the domain.</p> \[\frac{\partial u}{\partial t} = \alpha \left( \frac{\partial^2 u}{\partial x^2} + \frac{\partial^2 u}{\partial y^2} \right), \quad (x, y) \in \Omega, \ t &gt; 0\] <p>Futhermore, we consider the following initial condision and boundary conditions for the system,</p> \[u(x, y, 0) = sin(\pi x) sin(\pi y), \quad (x, y) \in \Omega \\ \\\] \[u(x, 1, t) = 1, \quad u(x, y, t) = 0, \quad (x, y) \in \partial \Omega, \ t &gt; 0\] <h2 id="what-is-physics-informed-neural-network-pinn">What is Physics-Informed Neural Network (PINN)?</h2> <p>In simple terms, machine learning for science equations(but not limited to it). A Physics-Informed Neural Network (PINN) is a type of deep learning model that incorporates physical laws‚Äîtypically expressed as partial differential equations (PDEs)‚Äîdirectly into the training process of the neural network. Unlike traditional neural networks that rely solely on labeled data, PINNs are trained using both data (if available) and the governing physical equations, enabling them to learn accurate solutions even with limited or no data.</p> <p><img src="/assets/img/PINN/network.jpg" alt="screenshot" width="400"/></p> <p>To learn a model, we try to tune the network‚Äôs free parameters (denoted by the \thetas in the figure above) so that the network‚Äôs predictions closely match the available experimental data. This is usually done by minimising the mean-squared-error between its predictions and the training points;</p> \[\begin{align} \min \frac{1}{N} \sum_{i=1}^{N} \left( u_{\text{NN}}(x_i; \theta) - u_{\text{true}}(x_i) \right)^2 \end{align}\] <h2 id="julia-implementation-and-code-walkthrough">Julia Implementation and Code Walkthrough</h2> <figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="o">&lt;</span><span class="nx">d</span><span class="o">-</span><span class="nx">code</span> <span class="nx">block</span> <span class="nx">language</span><span class="o">=</span><span class="dl">"</span><span class="s2">javascript</span><span class="dl">"</span><span class="o">&gt;</span>
    <span class="nx">using</span> <span class="nx">NeuralPDE</span><span class="p">,</span> <span class="nx">Lux</span><span class="p">,</span> <span class="nx">Optimization</span><span class="p">,</span> <span class="nx">OptimizationOptimJL</span>
    <span class="nx">using</span> <span class="nx">ModelingToolkit</span><span class="p">:</span> <span class="nx">Interval</span>
<span class="o">&lt;</span><span class="sr">/d-code&gt;</span></code></pre></figure> <p>We use NeuralPDE.jl for defining and solving PDEs, Lux.jl for neural networks, and ModelingToolkit.jl for symbolic definitions.</p> <figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="o">&lt;</span><span class="nx">d</span><span class="o">-</span><span class="nx">code</span> <span class="nx">block</span> <span class="nx">language</span><span class="o">=</span><span class="dl">"</span><span class="s2">javascript</span><span class="dl">"</span><span class="o">&gt;</span>
    <span class="p">@</span><span class="nd">parameters</span> <span class="nx">t</span><span class="p">,</span> <span class="nx">x</span><span class="p">,</span> <span class="nx">y</span>
    <span class="p">@</span><span class="nd">variables</span> <span class="nf">u</span><span class="p">(..)</span>
    <span class="nx">Dx</span> <span class="o">=</span> <span class="nc">Differential</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span> <span class="nx">Dy</span> <span class="o">=</span> <span class="nc">Differential</span><span class="p">(</span><span class="nx">y</span><span class="p">);</span> <span class="nx">Dt</span> <span class="o">=</span> <span class="nc">Differential</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span>
    <span class="nx">Dxx</span> <span class="o">=</span> <span class="nx">Dx</span><span class="o">^</span><span class="mi">2</span><span class="p">;</span> <span class="nx">Dyy</span> <span class="o">=</span> <span class="nx">Dy</span><span class="o">^</span><span class="mi">2</span>
<span class="o">&lt;</span><span class="sr">/d-code&gt;</span></code></pre></figure> <p>We symbolically define the time and space variables along with their partial derivatives.</p> <figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="o">&lt;</span><span class="nx">d</span><span class="o">-</span><span class="nx">code</span> <span class="nx">block</span> <span class="nx">language</span><span class="o">=</span><span class="dl">"</span><span class="s2">javascript</span><span class="dl">"</span><span class="o">&gt;</span>
    <span class="nx">Œ±</span> <span class="o">=</span> <span class="mf">1.0</span>
    <span class="nx">eq</span> <span class="o">=</span> <span class="nc">Dt</span><span class="p">(</span><span class="nf">u</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span> <span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">))</span> <span class="o">~</span> <span class="nx">Œ±</span> <span class="o">*</span> <span class="p">(</span><span class="nc">Dxx</span><span class="p">(</span><span class="nf">u</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span> <span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">))</span> <span class="o">+</span> <span class="nc">Dyy</span><span class="p">(</span><span class="nf">u</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span> <span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">)))</span>
    <span class="nx">domains</span> <span class="o">=</span> <span class="p">[</span>
        <span class="nx">t</span> <span class="err">‚àà</span> <span class="nc">Interval</span><span class="p">(</span><span class="mf">0.0</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">),</span>
        <span class="nx">x</span> <span class="err">‚àà</span> <span class="nc">Interval</span><span class="p">(</span><span class="mf">0.0</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">),</span>
        <span class="nx">y</span> <span class="err">‚àà</span> <span class="nc">Interval</span><span class="p">(</span><span class="mf">0.0</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">)</span>
    <span class="p">]</span>
    <span class="nx">ic</span> <span class="o">=</span> <span class="nf">u</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">)</span> <span class="o">~</span> <span class="mi">0</span>
    <span class="nx">bcs</span> <span class="o">=</span> <span class="p">[</span>
        <span class="nf">u</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">y</span><span class="p">)</span> <span class="o">~</span> <span class="mf">0.0</span><span class="p">,</span>
        <span class="nf">u</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">y</span><span class="p">)</span> <span class="o">~</span> <span class="mf">0.0</span><span class="p">,</span>
        <span class="nf">u</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span> <span class="nx">x</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="o">~</span> <span class="mf">0.0</span><span class="p">,</span>
        <span class="nf">u</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span> <span class="nx">x</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span> <span class="o">~</span> <span class="mf">1.0</span>
    <span class="p">]</span>
    <span class="p">@</span><span class="nd">named</span> <span class="nx">pde_system</span> <span class="o">=</span> <span class="nc">PDESystem</span><span class="p">(</span><span class="nx">eq</span><span class="p">,</span> <span class="p">[</span><span class="nx">ic</span><span class="p">;</span> <span class="nx">bcs</span><span class="p">],</span> <span class="nx">domains</span><span class="p">,</span> <span class="p">[</span><span class="nx">t</span><span class="p">,</span> <span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">],</span> <span class="p">[</span><span class="nf">u</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span> <span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">)])</span>
<span class="o">&lt;</span><span class="sr">/d-code&gt;</span></code></pre></figure> <p>We define the complete PDE system including equations and constraints.</p> <figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="o">&lt;</span><span class="nx">d</span><span class="o">-</span><span class="nx">code</span> <span class="nx">block</span> <span class="nx">language</span><span class="o">=</span><span class="dl">"</span><span class="s2">javascript</span><span class="dl">"</span><span class="o">&gt;</span>
    <span class="nx">dx</span> <span class="o">=</span> <span class="mf">0.05</span>
    <span class="nx">chain</span> <span class="o">=</span> <span class="nc">Chain</span><span class="p">(</span><span class="nc">Dense</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="nx">tanh</span><span class="p">),</span> <span class="nc">Dense</span><span class="p">(</span><span class="mi">32</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="nx">tanh</span><span class="p">),</span> <span class="nc">Dense</span><span class="p">(</span><span class="mi">32</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span>
    <span class="nx">discretization</span> <span class="o">=</span> <span class="nc">PhysicsInformedNN</span><span class="p">(</span><span class="nx">chain</span><span class="p">,</span> <span class="nc">GridTraining</span><span class="p">(</span><span class="nx">dx</span><span class="p">))</span>
    <span class="nx">prob</span> <span class="o">=</span> <span class="nf">discretize</span><span class="p">(</span><span class="nx">pde_system</span><span class="p">,</span> <span class="nx">discretization</span><span class="p">)</span>
    <span class="nx">losses</span> <span class="o">=</span> <span class="p">[]</span>

    <span class="nx">callback</span> <span class="o">=</span> <span class="nf">function </span><span class="p">(</span><span class="nx">p</span><span class="p">,</span> <span class="nx">l</span><span class="p">)</span>
        <span class="nf">println</span><span class="p">(</span><span class="dl">"</span><span class="s2">Current loss is: $l</span><span class="dl">"</span><span class="p">)</span>
        <span class="nx">push</span><span class="o">!</span><span class="p">(</span><span class="nx">losses</span><span class="p">,</span> <span class="nx">l</span><span class="p">)</span>
        <span class="k">return</span> <span class="kc">false</span>
    <span class="nx">end</span>
    <span class="nx">using</span> <span class="nx">OptimizationOptimisers</span>
    <span class="nx">opt1</span> <span class="o">=</span> <span class="nx">OptimizationOptimisers</span><span class="p">.</span><span class="nc">Adam</span><span class="p">(</span><span class="mf">0.01</span><span class="p">)</span>
    <span class="nx">res1</span> <span class="o">=</span> <span class="nx">Optimization</span><span class="p">.</span><span class="nf">solve</span><span class="p">(</span><span class="nx">prob</span><span class="p">,</span> <span class="nx">opt1</span><span class="p">;</span> <span class="nx">callback</span><span class="o">=</span><span class="nx">callback</span><span class="p">,</span> <span class="nx">maxiters</span><span class="o">=</span><span class="mi">1000</span><span class="p">)</span>
    <span class="nx">phi</span> <span class="o">=</span> <span class="nx">discretization</span><span class="p">.</span><span class="nx">phi</span>
<span class="o">&lt;</span><span class="sr">/d-code&gt;</span></code></pre></figure> <p>This part sets up and trains the Physics-Informed Neural Network (PINN) to solve the 2D heat equation. It defines the neural network architecture, discretizes the PDE using grid-based training, and initializes the optimization problem. Training is performed using the ADAM optimizer with a callback to monitor loss, and the final trained model (phi) can be used to predict the solution over the domain.</p> <figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="o">&lt;</span><span class="nx">d</span><span class="o">-</span><span class="nx">code</span> <span class="nx">block</span> <span class="nx">language</span><span class="o">=</span><span class="dl">"</span><span class="s2">javascript</span><span class="dl">"</span><span class="o">&gt;</span>
    <span class="nx">xs</span> <span class="o">=</span> <span class="nx">ys</span> <span class="o">=</span> <span class="nf">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">length</span><span class="o">=</span><span class="mi">50</span><span class="p">)</span>
    <span class="nx">t_plot</span> <span class="o">=</span> <span class="mf">0.0</span>  <span class="err">#</span> <span class="nx">Fixed</span> <span class="nx">time</span>
    <span class="nx">u_predict</span> <span class="o">=</span> <span class="p">[</span><span class="nf">sin</span><span class="p">(</span><span class="nx">pi</span><span class="o">*</span><span class="nx">x</span><span class="p">)</span><span class="o">*</span><span class="nf">sin</span><span class="p">(</span><span class="nx">pi</span><span class="o">*</span><span class="nx">y</span><span class="p">)</span> <span class="k">for</span> <span class="nx">x</span> <span class="k">in</span> <span class="nx">xs</span><span class="p">,</span> <span class="nx">y</span> <span class="k">in</span> <span class="nx">ys</span><span class="p">]</span>
    <span class="nf">heatmap</span><span class="p">(</span><span class="nx">xs</span><span class="p">,</span> <span class="nx">ys</span><span class="p">,</span> <span class="nx">u_predict</span><span class="dl">'</span><span class="s1">, xlabel="x", ylabel="y", title="2D domain at t = $t_plot", 
            color=:viridis, colorbar=true, colorbar_title="Temperature")
    anim = @animate for t_plot in 0:0.005:1.0
        u = [phi([t_plot, x, y], res.u)[1] for x in xs, y in ys]
        heatmap(0:0.02:1, 0:0.02:1, u</span><span class="dl">'</span><span class="p">,</span> <span class="nx">title</span><span class="o">=</span><span class="dl">"</span><span class="s2">t = $t_plot</span><span class="dl">"</span><span class="p">,</span> <span class="nx">xlabel</span><span class="o">=</span><span class="dl">"</span><span class="s2">x</span><span class="dl">"</span><span class="p">,</span> <span class="nx">ylabel</span><span class="o">=</span><span class="dl">"</span><span class="s2">y</span><span class="dl">"</span><span class="p">,</span> <span class="nx">clims</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
    <span class="nx">end</span>
    <span class="nf">gif</span><span class="p">(</span><span class="nx">anim</span><span class="p">,</span> <span class="dl">"</span><span class="s2">newheat2d.gif</span><span class="dl">"</span><span class="p">,</span> <span class="nx">fps</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
    <span class="nf">plot</span><span class="p">(</span><span class="mi">1</span><span class="p">:</span><span class="nf">length</span><span class="p">(</span><span class="nx">losses</span><span class="p">),</span> <span class="nx">log10</span><span class="p">.(</span><span class="nx">losses</span><span class="p">),</span>
        <span class="nx">xlabel</span><span class="o">=</span><span class="dl">"</span><span class="s2">Iteration</span><span class="dl">"</span><span class="p">,</span> <span class="nx">ylabel</span><span class="o">=</span><span class="dl">"</span><span class="s2">log(Loss)</span><span class="dl">"</span><span class="p">,</span>
        <span class="nx">title</span><span class="o">=</span><span class="dl">"</span><span class="s2">Error Plot (log(Loss) vs Iteration)</span><span class="dl">"</span><span class="p">,</span>
        <span class="nx">label</span><span class="o">=</span><span class="dl">"</span><span class="s2">Training Loss</span><span class="dl">"</span><span class="p">,</span> <span class="nx">linewidth</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
<span class="o">&lt;</span><span class="sr">/d-code&gt;</span></code></pre></figure> <p>After training the PINN model, we can visualize its predictions over time and space. The following Julia code uses the Plots.jl library to create both static heatmaps and animated GIFs showing the temperature evolution in the 2D domain.</p> <hr/> <h3 id="initial-temperature-distribution-heat-map-we-start-with">Initial temperature distribution heat map we start with:</h3> <p><img src="/assets/img/PINN/plot_1.svg" alt="Initial Heatmap"/></p> <h3 id="temperature-field-from-our-pinn-network-develops-as-follows">Temperature field from our PINN network develops as follows:</h3> <p><img src="/assets/img/PINN/newheat2d.gif" alt="Temperature Evolution"/></p> <h3 id="error-plot-over-time">Error plot over time:</h3> <p><img src="/assets/img/PINN/plot_2.svg" alt="Error Plot"/> ‚Äî</p>]]></content><author><name></name></author><category term="science"/><category term="math"/><category term="code"/><summary type="html"><![CDATA[Leveraging Physics-Informed Neural Networks (PINNs) for solving scientific PDEs]]></summary></entry><entry><title type="html">Exploring Osaka</title><link href="https://7vidhan.github.io/blog/2024/osaka-diaries/" rel="alternate" type="text/html" title="Exploring Osaka"/><published>2024-12-28T01:59:00+00:00</published><updated>2024-12-28T01:59:00+00:00</updated><id>https://7vidhan.github.io/blog/2024/osaka-diaries</id><content type="html" xml:base="https://7vidhan.github.io/blog/2024/osaka-diaries/"><![CDATA[<h4 id="getting-lost-and-loving-it-my-travel-tales">Getting lost and loving it: My travel tales!</h4> <hr/> <h2 id="exploring-osaka-a-journey-of-food-vibes-and-scenic-beauty">Exploring Osaka: A Journey of Food, Vibes, and Scenic Beauty</h2> <p>Living in Osaka has been an adventure in itself, and I‚Äôve fallen in love with the city‚Äôs vibe. The people? Laid-back and friendly. The food? Hands down the MVP. Whether it‚Äôs takoyaki, okonomiyaki, or some dish I still can‚Äôt pronounce properly, the flavors here never fail to impress.</p> <hr/> <h3 id="first-stop-osaka-castle">First Stop: Osaka Castle</h3> <p>When I first moved to Osaka, the very first place I visited was Osaka Castle, a towering piece of history smack in the middle of the city. Spoiler alert: it‚Äôs less of a castle and more of a museum. But hey, don‚Äôt let that stop you‚Äîit‚Äôs packed with history and offers a pretty insightful experience. Plus, the views from the top? Chef‚Äôs kiss.</p> <hr/> <div class="spotlight-group"> <a class="spotlight" href="/assets/img/osaka_diaries/osaka_castle.jpg"> <img src="/assets/img/osaka_diaries/osaka_castle.jpg" loading="lazy" style="width: 20vw; min-width: 25px;" zoomable="true"/> </a> <a class="spotlight" href="/assets/img/osaka_diaries/view.jpg"> <img src="/assets/img/osaka_diaries/view.jpg" loading="lazy" style="width: 20vw; min-width: 25px;" zoomable="true"/> </a> <a class="spotlight" href="/assets/img/osaka_diaries/stamp.jpg"> <img src="/assets/img/osaka_diaries/stamp.jpg" loading="lazy" style="width: 20vw; min-width: 25px;" zoomable="true"/> </a> </div> <hr/> <h3 id="temples-shrines-and-all-things-zen">Temples, Shrines, and All Things Zen</h3> <p>Osaka, like any Japanese city worth its salt, boasts a treasure trove of shrines and temples. Each one feels like a gateway to another time, blending the old with the modern bustle of the city.</p> <hr/> <div class="spotlight-group"> <a class="spotlight" href="/assets/img/osaka_diaries/katsuoji.jpg"> <img src="/assets/img/osaka_diaries/katsuoji.jpg" loading="lazy" style="width: 20vw; min-width: 25px;" zoomable="true"/> </a> <a class="spotlight" href="/assets/img/osaka_diaries/minoh.jpg"> <img src="/assets/img/osaka_diaries/minoh.jpg" loading="lazy" style="width: 20vw; min-width: 25px;" zoomable="true"/> </a> <a class="spotlight" href="/assets/img/osaka_diaries/rainbow.jpg"> <img src="/assets/img/osaka_diaries/rainbow.jpg" loading="lazy" style="width: 20vw; min-width: 25px;" zoomable="true"/> </a> </div> <hr/> <h3 id="the-great-minoh-adventure">The Great Minoh Adventure</h3> <p>Now let me tell you about Minoh Waterfall, a hidden gem that‚Äôs worth every step. I decided to take the scenic route‚Äîa 4-hour hike‚Äîbecause, well, I‚Äôm the kind of person who thinks sweat equals fun. If hiking‚Äôs not your thing, don‚Äôt worry; there‚Äôs a road that‚Äôll take you straight to the waterfall.</p> <p>But wait, there‚Äôs more! Just a little further up the trail is Katsuoji Temple, a stunning spot nestled in the hills. Trust me, autumn is when this place truly shines. The fiery reds and oranges of the leaves against the temple backdrop? Absolutely breathtaking. It‚Äôs the kind of scenery that makes you forget your legs are about to mutiny from all the hiking.</p> <hr/> <div class="spotlight-group"> <a class="spotlight" href="/assets/img/osaka_diaries/hill.jpg"> <img src="/assets/img/osaka_diaries/hill.jpg" loading="lazy" style="width: 20vw; min-width: 25px;" zoomable="true"/> </a> <a class="spotlight" href="/assets/img/osaka_diaries/event.jpg"> <img src="/assets/img/osaka_diaries/event.jpg" loading="lazy" style="width: 20vw; min-width: 25px;" zoomable="true"/> </a> <a class="spotlight" href="/assets/img/osaka_diaries/city.jpg"> <img src="/assets/img/osaka_diaries/city.jpg" loading="lazy" style="width: 20vw; min-width: 25px;" zoomable="true"/> </a> </div> <hr/> <h3 id="diving-into-kaiyukan">Diving into Kaiyukan</h3> <p>Kaiyukan Aquarium isn‚Äôt just an aquarium‚Äîit‚Äôs a full-blown underwater extravaganza. Think waddling penguins, majestic manta rays, and glittering schools of fish that make you feel like you‚Äôve stumbled into a Pixar movie. Every tank is a masterpiece, and yes, you‚Äôll probably end up taking way too many photos. Sure, the tickets might pinch your wallet, but trust me, it‚Äôs worth every yen‚Äîvisual magic like this doesn‚Äôt come cheap!</p> <hr/> <div class="spotlight-group"> <a class="spotlight" href="/assets/img/osaka_diaries/alien.jpg"> <img src="/assets/img/osaka_diaries/alien.jpg" loading="lazy" style="width: 20vw; min-width: 25px;" zoomable="true"/> </a> <a class="spotlight" href="/assets/img/osaka_diaries/dolphin.jpg"> <img src="/assets/img/osaka_diaries/dolphin.jpg" loading="lazy" style="width: 20vw; min-width: 25px;" zoomable="true"/> </a> <a class="spotlight" href="/assets/img/osaka_diaries/crab.jpg"> <img src="/assets/img/osaka_diaries/crab.jpg" loading="lazy" style="width: 20vw; min-width: 25px;" zoomable="true"/> </a> </div> <hr/> <p>Osaka has truly been a city of discovery for me, blending modern comforts with historic charm. Whether you‚Äôre here for the food, the sights, or just the friendly people, there‚Äôs something for everyone. So, lace up your walking shoes‚Äîor don‚Äôt‚Äîand let Osaka work its magic on you.</p>]]></content><author><name></name></author><category term="travel"/><summary type="html"><![CDATA[Tag along as I eat, hike, and get lost in Osaka!]]></summary></entry><entry><title type="html">Exploring Kyoto</title><link href="https://7vidhan.github.io/blog/2024/kyoto-diaries/" rel="alternate" type="text/html" title="Exploring Kyoto"/><published>2024-12-28T01:58:00+00:00</published><updated>2024-12-28T01:58:00+00:00</updated><id>https://7vidhan.github.io/blog/2024/kyoto-diaries</id><content type="html" xml:base="https://7vidhan.github.io/blog/2024/kyoto-diaries/"><![CDATA[<h4 id="getting-lost-and-loving-it-my-travel-tales">Getting lost and loving it: My travel tales!</h4> <hr/> <h2 id="discovering-kyoto-a-blend-of-serenity-and-splendor">Discovering Kyoto: A Blend of Serenity and Splendor</h2> <p>Kyoto never fails to charm, and my visit to Kurama-dera was no exception. Nestled in the northern mountains of Kyoto, this peaceful temple felt like stepping into another world‚Äîa world painted in fiery shades of red and gold under the autumn sun. If you think autumn leaves are just leaves, Kurama will make you think again.</p> <hr/> <h3 id="a-hike-to-remember">A Hike to Remember</h3> <p>Getting to Kurama-dera isn‚Äôt just a visit; it‚Äôs an experience. The hike leading up to the temple was a delightful mix of cool, crisp winds and sun-drenched pathways, perfectly balanced by the breathtaking autumn foliage. Every step feels like walking through a live postcard. And once you reach the top, the view and the temple make it all worth it.</p> <hr/> <div class="spotlight-group"> <a class="spotlight" href="/assets/img/kyoto_diaries/autumn.jpg"> <img src="/assets/img/kyoto_diaries/autumn.jpg" style="width: 40vw; min-width: 25px;" zoomable="true"/> </a> <a class="spotlight" href="/assets/img/kyoto_diaries/style.jpg"> <img src="/assets/img/kyoto_diaries/style.jpg" style="width: 20vw; min-width: 25px;" zoomable="true"/> </a> <a class="spotlight" href="/assets/img/kyoto_diaries/dragon.jpg"> <img src="/assets/img/kyoto_diaries/dragon.jpg" style="width: 40vw; min-width: 25px;" zoomable="true"/> </a> </div> <hr/> <h3 id="blossoms-and-night-vibes">Blossoms and Night Vibes</h3> <p>While autumn gets all the love, let‚Äôs not forget the plum blossoms that pop up in early spring, adding a soft blush of beauty to the temple grounds. But the magic doesn‚Äôt end when the sun sets‚ÄîKurama‚Äôs night vibe is exotic and mysterious, with an air of tranquility that lingers long after you leave.</p> <hr/> <div class="spotlight-group"> <a class="spotlight" href="/assets/img/kyoto_diaries/plum.jpg"> <img src="/assets/img/kyoto_diaries/plum.jpg" style="width: 20vw; min-width: 25px;" zoomable="true"/> </a> <a class="spotlight" href="/assets/img/kyoto_diaries/vibe.jpg"> <img src="/assets/img/kyoto_diaries/vibe.jpg" style="width: 20vw; min-width: 25px;" zoomable="true"/> </a> <a class="spotlight" href="/assets/img/kyoto_diaries/gate.jpg"> <img src="/assets/img/kyoto_diaries/gate.jpg" style="width: 20vw; min-width: 25px;" zoomable="true"/> </a> <a class="spotlight" href="/assets/img/kyoto_diaries/night.jpg"> <img src="/assets/img/kyoto_diaries/night.jpg" style="width: 40vw; min-width: 25px;" zoomable="true"/> </a> </div> <hr/> <p>If you‚Äôre looking for a place to hike, reflect, and soak in Kyoto‚Äôs natural beauty, Kurama-dera is the spot. Just don‚Äôt forget your camera‚Äîand maybe a warm jacket for those chilly winds!</p>]]></content><author><name></name></author><category term="travel"/><summary type="html"><![CDATA[Where culture meets breathtaking beauty!]]></summary></entry><entry><title type="html">Exploring Kansai</title><link href="https://7vidhan.github.io/blog/2024/kansai-diaries/" rel="alternate" type="text/html" title="Exploring Kansai"/><published>2024-12-28T01:57:00+00:00</published><updated>2024-12-28T01:57:00+00:00</updated><id>https://7vidhan.github.io/blog/2024/kansai-diaries</id><content type="html" xml:base="https://7vidhan.github.io/blog/2024/kansai-diaries/"><![CDATA[<h4 id="getting-lost-and-loving-it-my-travel-tales">Getting lost and loving it: My travel tales!</h4> <hr/> <h2 id="kansai-adventures-kobe-wakayama-and-beyond">Kansai Adventures: Kobe, Wakayama, and Beyond</h2> <p>Kansai is a treasure trove of experiences, and Kobe holds a special place in my heart. Why? Because it has everything. Mountains? Check. Sea? Check. Chinatown? Onsen? City life? Islands? You name it, Kobe‚Äôs got it. It‚Äôs the perfect blend of nature and urban charm, making every visit feel like an adventure.</p> <hr/> <h3 id="a-snowy-quest-to-koyasan">A Snowy Quest to Koyasan</h3> <p>Wakayama, on the other hand, breathes a completely different vibe. If I had to sum it up, it‚Äôs natural beauty meets rich culture. It‚Äôs serene, unspoiled, and feels like a slice of old Japan. And let‚Äôs talk about the mikan‚Äîthose delicious, juicy oranges that are an absolute must-try. Forget souvenirs; you‚Äôll want to take home a crate of these!</p> <p>For the hiking enthusiast in me, Koyasan was a dream. The hike? A marathon-worthy 24 km trek that took a solid 7‚Äì8 hours. The goal? To find snow amidst the serene mountain paths. While it was long and challenging, every step felt like a conquest through stunning landscapes, with the crisp mountain air keeping me energized.</p> <hr/> <div class="spotlight-group"> <a class="spotlight" href="/assets/img/kansai_diaries/style.jpg"> <img src="/assets/img/kansai_diaries/style.jpg" style="width: 15vw; min-width: 25px;" zoomable="true"/> </a> <a class="spotlight" href="/assets/img/kansai_diaries/buddha.jpg"> <img src="/assets/img/kansai_diaries/buddha.jpg" style="width: 15vw; min-width: 25px;" zoomable="true"/> </a> <a class="spotlight" href="/assets/img/kansai_diaries/snow.jpg"> <img src="/assets/img/kansai_diaries/snow.jpg" style="width: 32vw; min-width: 25px;" zoomable="true"/> </a> <a class="spotlight" href="/assets/img/kansai_diaries/homies.jpg"> <img src="/assets/img/kansai_diaries/homies.jpg" style="width: 30vw; min-width: 25px;" zoomable="true"/> </a> <a class="spotlight" href="/assets/img/kansai_diaries/food.jpg"> <img src="/assets/img/kansai_diaries/food.jpg" style="width: 30vw; min-width: 25px;" zoomable="true"/> </a> </div> <hr/> <h3 id="off-the-beaten-path">Off the Beaten Path</h3> <p>While not in Kansai, I couldn‚Äôt resist making a little side trip to Shimada in Shizuoka. There‚Äôs something uniquely special about every low-key town in Japan, and Shimada proved that perfectly. We explored a quaint zoo and a biological park, which made for a calming and refreshing day. It wasn‚Äôt just about the sights‚Äîthe vibe was so relaxing, and I even got some great clicks to cherish.</p> <p>Life‚Äôs all about going the extra mile, right? Shimada may not have been part of the original plan, but it was totally worth the detour.</p> <hr/> <div class="spotlight-group"> <a class="spotlight" href="/assets/img/kansai_diaries/flower.jpg"> <img src="/assets/img/kansai_diaries/flower.jpg" style="width: 20vw; min-width: 25px;" zoomable="true"/> </a> <a class="spotlight" href="/assets/img/kansai_diaries/ostrich.jpg"> <img src="/assets/img/kansai_diaries/ostrich.jpg" style="width: 20vw; min-width: 25px;" zoomable="true"/> </a> <a class="spotlight" href="/assets/img/kansai_diaries/ponto.jpg"> <img src="/assets/img/kansai_diaries/ponto.jpg" style="width: 20vw; min-width: 25px;" zoomable="true"/> </a> <a class="spotlight" href="/assets/img/kansai_diaries/color.jpg"> <img src="/assets/img/kansai_diaries/color.jpg" style="width: 40vw; min-width: 25px;" zoomable="true"/> </a> <a class="spotlight" href="/assets/img/kansai_diaries/sushi.jpg"> <img src="/assets/img/kansai_diaries/sushi.jpg" style="width: 40vw; min-width: 25px;" zoomable="true"/> </a> </div> <hr/> <p>Kansai and beyond‚Äîeverywhere I‚Äôve been has its own charm and unique story to tell. Whether it‚Äôs the hustle of Kobe, the serene air of Wakayama, or the unexpected gems like Shimada, every place has left me with memories to treasure.</p>]]></content><author><name></name></author><category term="travel"/><summary type="html"><![CDATA[Where tradition blends with modern wonders!]]></summary></entry><entry><title type="html">My Passions. A Peek into My World</title><link href="https://7vidhan.github.io/blog/2024/hobbies/" rel="alternate" type="text/html" title="My Passions. A Peek into My World"/><published>2024-12-27T00:32:13+00:00</published><updated>2024-12-27T00:32:13+00:00</updated><id>https://7vidhan.github.io/blog/2024/hobbies</id><content type="html" xml:base="https://7vidhan.github.io/blog/2024/hobbies/"><![CDATA[<p>A little about my interests. I invest my leisure time in these.</p> <h2 id="my-hobbies">My hobbies</h2> <ul id="something-else" class="tab" data-tab="4d4ff21b-7f5e-4d6c-a572-7b7990176b0e" data-name="something-else"> <li class="active" id="something-else-sport"> <a href="#">sport </a> </li> <li id="something-else-novels"> <a href="#">novels </a> </li> <li id="something-else-screentime"> <a href="#">screentime </a> </li> <li id="something-else-anime"> <a href="#">anime </a> </li> </ul> <ul class="tab-content" id="4d4ff21b-7f5e-4d6c-a572-7b7990176b0e" data-name="something-else"> <li class="active"> <p>Join me if you enjoy any‚Ä¶</p> <ul> <li>Cricket</li> <li>Table Tennis</li> <li>Competitive Programming</li> <li>Chess</li> <li>Carrom</li> <li>Hiking</li> <li>Jogging</li> <li>Sleeping (solo sport, no teammates needed)</li> </ul> </li> <li> <p>I read these in my free time‚Ä¶</p> <ul> <li>12 Rules of Life, Jordan Peterson</li> <li>Sapiens, Yuval Noah Harari</li> <li>Crime and Punishment, Friedrich Nietzsche</li> <li>Alchemist, Paulo Coelho</li> <li>Metamorphosis, Franz Kafka</li> <li>The Brothers Karamazov, Fyodor Dostoevsky</li> <li>Daughter of Destiny, Benazir Bhutto</li> <li>Notes From Underground, Fyodor Dostoevsky</li> </ul> </li> <li> <p>I watch these in my free time‚Ä¶</p> <ul> <li>Breaking Bad</li> <li>Blood Diamond</li> <li>Batman(Zack Snyder)</li> <li>Gangs of Wasseypur</li> <li>Old Boy</li> <li>Kung Fu Hustle</li> <li>Rick and Morty</li> <li>Hangover</li> </ul> </li> <li> <p>Who doesn‚Äôt like anime‚Ä¶</p> <ul> <li>One Punch Man</li> <li>Solo Leveling</li> <li>Death Note</li> <li>Code Geass</li> <li>Hunter x Hunter</li> <li>Gurren Lagan</li> <li>Shinchan</li> <li>Doraemon</li> </ul> </li> </ul>]]></content><author><name></name></author><category term="mylogs"/><category term="myinterests"/><summary type="html"><![CDATA[A glimpse into what keeps me inspired and energized]]></summary></entry><entry><title type="html">a distill-style blog post</title><link href="https://7vidhan.github.io/blog/2021/distill/" rel="alternate" type="text/html" title="a distill-style blog post"/><published>2021-05-22T00:00:00+00:00</published><updated>2021-05-22T00:00:00+00:00</updated><id>https://7vidhan.github.io/blog/2021/distill</id><content type="html" xml:base="https://7vidhan.github.io/blog/2021/distill/"><![CDATA[<h2 id="equations">Equations</h2> <p>This theme supports rendering beautiful math in inline and display modes using <a href="https://www.mathjax.org/">MathJax 3</a> engine. You just need to surround your math expression with <code class="language-plaintext highlighter-rouge">$$</code>, like <code class="language-plaintext highlighter-rouge">$$ E = mc^2 $$</code>. If you leave it inside a paragraph, it will produce an inline expression, just like \(E = mc^2\).</p> <p>In fact, you can also use a single dollar sign <code class="language-plaintext highlighter-rouge">$</code> to create inline formulas, such as <code class="language-plaintext highlighter-rouge">$ E = mc^2 $</code>, which will render as $ E = mc^2 $. This approach provides the same effect during TeX-based compilation, but visually it appears slightly less bold compared to double-dollar signs <code class="language-plaintext highlighter-rouge">$$</code>, making it blend more naturally with surrounding text.</p> <p>To use display mode, again surround your expression with <code class="language-plaintext highlighter-rouge">$$</code> and place it as a separate paragraph. Here is an example:</p> \[\left( \sum_{k=1}^n a_k b_k \right)^2 \leq \left( \sum_{k=1}^n a_k^2 \right) \left( \sum_{k=1}^n b_k^2 \right)\] <p>Note that MathJax 3 is <a href="https://docs.mathjax.org/en/latest/upgrading/whats-new-3.0.html">a major re-write of MathJax</a> that brought a significant improvement to the loading and rendering speed, which is now <a href="http://www.intmath.com/cg5/katex-mathjax-comparison.php">on par with KaTeX</a>.</p> <hr/> <h2 id="citations">Citations</h2> <p>Citations are then used in the article body with the <code class="language-plaintext highlighter-rouge">&lt;d-cite&gt;</code> tag. The key attribute is a reference to the id provided in the bibliography. The key attribute can take multiple ids, separated by commas.</p> <p>The citation is presented inline like this: <d-cite key="gregor2015draw"></d-cite> (a number that displays more information on hover). If you have an appendix, a bibliography is automatically created and populated in it.</p> <p>Distill chose a numerical inline citation style to improve readability of citation dense articles and because many of the benefits of longer citations are obviated by displaying more information on hover. However, we consider it good style to mention author last names if you discuss something at length and it fits into the flow well‚Äâ‚Äî‚Äâthe authors are human and it‚Äôs nice for them to have the community associate them with their work.</p> <hr/> <h2 id="footnotes">Footnotes</h2> <p>Just wrap the text you would like to show up in a footnote in a <code class="language-plaintext highlighter-rouge">&lt;d-footnote&gt;</code> tag. The number of the footnote will be automatically generated.<d-footnote>This will become a hoverable footnote.</d-footnote></p> <hr/> <h2 id="code-blocks">Code Blocks</h2> <p>Syntax highlighting is provided within <code class="language-plaintext highlighter-rouge">&lt;d-code&gt;</code> tags. An example of inline code snippets: <code class="language-plaintext highlighter-rouge">&lt;d-code language="html"&gt;let x = 10;&lt;/d-code&gt;</code>. For larger blocks of code, add a <code class="language-plaintext highlighter-rouge">block</code> attribute:</p> <d-code block="" language="javascript"> var x = 25; function(x) { return x * x; } </d-code> <p><strong>Note:</strong> <code class="language-plaintext highlighter-rouge">&lt;d-code&gt;</code> blocks do not look good in the dark mode. You can always use the default code-highlight using the <code class="language-plaintext highlighter-rouge">highlight</code> liquid tag:</p> <figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">25</span><span class="p">;</span>
<span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span> <span class="p">{</span>
<span class="k">return</span> <span class="nx">x</span> <span class="err">\</span><span class="o">*</span> <span class="nx">x</span><span class="p">;</span>
<span class="p">}</span></code></pre></figure> <hr/> <h2 id="interactive-plots">Interactive Plots</h2> <p>You can add interative plots using plotly + iframes :framed_picture:</p> <div class="l-page"> <iframe src="/assets/plotly/demo.html" frameborder="0" scrolling="no" height="500px" width="100%" style="border: 1px dashed grey;"></iframe> </div> <p>The plot must be generated separately and saved into an HTML file. To generate the plot that you see above, you can use the following code snippet:</p> <figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="n">plotly.express</span> <span class="k">as</span> <span class="n">px</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span>
<span class="sh">'</span><span class="s">https://raw.githubusercontent.com/plotly/datasets/master/earthquakes-23k.csv</span><span class="sh">'</span>
<span class="p">)</span>
<span class="n">fig</span> <span class="o">=</span> <span class="n">px</span><span class="p">.</span><span class="nf">density_mapbox</span><span class="p">(</span>
<span class="n">df</span><span class="p">,</span>
<span class="n">lat</span><span class="o">=</span><span class="sh">'</span><span class="s">Latitude</span><span class="sh">'</span><span class="p">,</span>
<span class="n">lon</span><span class="o">=</span><span class="sh">'</span><span class="s">Longitude</span><span class="sh">'</span><span class="p">,</span>
<span class="n">z</span><span class="o">=</span><span class="sh">'</span><span class="s">Magnitude</span><span class="sh">'</span><span class="p">,</span>
<span class="n">radius</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span>
<span class="n">center</span><span class="o">=</span><span class="nf">dict</span><span class="p">(</span><span class="n">lat</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">lon</span><span class="o">=</span><span class="mi">180</span><span class="p">),</span>
<span class="n">zoom</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span>
<span class="n">mapbox_style</span><span class="o">=</span><span class="sh">"</span><span class="s">stamen-terrain</span><span class="sh">"</span><span class="p">,</span>
<span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">write_html</span><span class="p">(</span><span class="sh">'</span><span class="s">assets/plotly/demo.html</span><span class="sh">'</span><span class="p">)</span></code></pre></figure> <hr/> <h2 id="details-boxes">Details boxes</h2> <p>Details boxes are collapsible boxes which hide additional information from the user. They can be added with the <code class="language-plaintext highlighter-rouge">details</code> liquid tag:</p> <details><summary>Click here to know more</summary> <p>Additional details, where math \(2x - 1\) and <code class="language-plaintext highlighter-rouge">code</code> is rendered correctly.</p> </details> <hr/> <h2 id="mermaid">Mermaid</h2> <p>This theme supports creating diagrams directly in markdown using <a href="https://mermaid.js.org/">Mermaid</a>. Mermaid enables users to render flowcharts, sequence diagrams, class diagrams, Gantt charts, and more. Simply embed the diagram syntax within a mermaid code block.</p> <p>To create a Gantt chart, you can use the following syntax:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">mermaid
</span><span class="sb">gantt
    dateFormat  YYYY-MM-DD
    title A Gantt Diagram

    section Section
    Task A           :a1, 2025-01-01, 30d
    Task B           :after a1, 20d
    Task C           :2025-01-10, 12d</span>
<span class="p">```</span>
</code></pre></div></div> <p>And here‚Äôs how it will be rendered:</p> <pre><code class="language-mermaid">gantt
    dateFormat  YYYY-MM-DD
    title A Gantt Diagram

    section Section
    Task A           :a1, 2025-01-01, 30d
    Task B           :after a1, 20d
    Task C           :2025-01-10, 12d
</code></pre> <p>Similarly, you can also use it to create beautiful class diagrams:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>```mermaid
classDiagram
direction LR
    class Animal {
        +String species
        +int age
        +makeSound()
    }
    class Dog {
        +String breed
        +bark()
    }
    class Cat {
        +String color
        +meow()
    }
    class Bird {
        +String wingSpan
        +fly()
    }
    class Owner {
        +String name
        +int age
        +adoptAnimal(Animal animal)
    }

    Animal &lt;|-- Dog
    Animal &lt;|-- Cat
    Animal &lt;|-- Bird
    Owner "1" --&gt; "0..*" Animal

    Dog : +fetch()
    Cat : +purr()
    Bird : +sing()
```
</code></pre></div></div> <p>It will be presented as:</p> <pre><code class="language-mermaid">classDiagram
direction LR
    class Animal {
        +String species
        +int age
        +makeSound()
    }
    class Dog {
        +String breed
        +bark()
    }
    class Cat {
        +String color
        +meow()
    }
    class Bird {
        +String wingSpan
        +fly()
    }
    class Owner {
        +String name
        +int age
        +adoptAnimal(Animal animal)
    }

    Animal &lt;|-- Dog
    Animal &lt;|-- Cat
    Animal &lt;|-- Bird
    Owner "1" --&gt; "0..*" Animal

    Dog : +fetch()
    Cat : +purr()
    Bird : +sing()
</code></pre> <p>With Mermaid, you can easily add clear and dynamic diagrams to enhance your blog content.</p> <hr/> <h2 id="diff2html">Diff2Html</h2> <p>This theme also supports integrating <a href="https://github.com/rtfpessoa/diff2html">Diff2Html</a>, a tool that beautifully renders code differences (diffs) directly in markdown. Diff2Html is ideal for showcasing code changes, allowing you to clearly present additions, deletions, and modifications. It‚Äôs perfect for code reviews, documentation, and tutorials where step-by-step code changes need to be highlighted‚Äîyou can even introduce changes across multiple files at once.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">diff2html
</span><span class="sb">diff --git a/utils/mathUtils.js b/utils/mathUtils.js
index 3b5f3d1..c7f9b2e 100644
--- a/utils/mathUtils.js
+++ b/utils/mathUtils.js
@@ -1,8 +1,12 @@
-// Basic math utilities
+// Extended math utilities with additional functions

-export function calculateArea(radius) {
-    const PI = 3.14159;
+export function calculateCircleMetrics(radius) {
+    const PI = Math.PI;
     const area = PI * radius ** 2;
+    const circumference = 2 * PI * radius;
+
+    if (!isValidRadius(radius)) throw new Error("Invalid radius");
+
     return { area, circumference };
 }

-export function validateRadius(radius) {
+export function isValidRadius(radius) {
     return typeof radius === 'number' &amp;&amp; radius &gt; 0;
 }

diff --git a/main.js b/main.js
index 5f6a9c3..b7d4e8f 100644
--- a/main.js
+++ b/main.js
@@ -2,9 +2,12 @@
 import { calculateCircleMetrics } from './utils/mathUtils';

-function displayCircleMetrics(radius) {
-    const { area } = calculateCircleMetrics(radius);
+function displayCircleMetrics(radius) {
+    const { area, circumference } = calculateCircleMetrics(radius);
     console.log(`Area: ${area}`);
+    console.log(`Circumference: ${circumference}`);
 }

-displayCircleMetrics(5);
+try {
+    displayCircleMetrics(5);
+} catch (error) {
+    console.error("Error:", error.message);
+}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Here‚Äôs how it will look when rendered with Diff2Html:</p> <pre><code class="language-diff2html">diff --git a/utils/mathUtils.js b/utils/mathUtils.js
index 3b5f3d1..c7f9b2e 100644
--- a/utils/mathUtils.js
+++ b/utils/mathUtils.js
@@ -1,8 +1,12 @@
-// Basic math utilities
+// Extended math utilities with additional functions

-export function calculateArea(radius) {
-    const PI = 3.14159;
+export function calculateCircleMetrics(radius) {
+    const PI = Math.PI;
     const area = PI * radius ** 2;
+    const circumference = 2 * PI * radius;
+
+    if (!isValidRadius(radius)) throw new Error("Invalid radius");
+
     return { area, circumference };
 }

-export function validateRadius(radius) {
+export function isValidRadius(radius) {
     return typeof radius === 'number' &amp;&amp; radius &gt; 0;
 }

diff --git a/main.js b/main.js
index 5f6a9c3..b7d4e8f 100644
--- a/main.js
+++ b/main.js
@@ -2,9 +2,12 @@
 import { calculateCircleMetrics } from './utils/mathUtils';

-function displayCircleMetrics(radius) {
-    const { area } = calculateCircleMetrics(radius);
+function displayCircleMetrics(radius) {
+    const { area, circumference } = calculateCircleMetrics(radius);
     console.log(`Area: ${area}`);
+    console.log(`Circumference: ${circumference}`);
 }

-displayCircleMetrics(5);
+try {
+    displayCircleMetrics(5);
+} catch (error) {
+    console.error("Error:", error.message);
+}
</code></pre> <hr/> <h2 id="leaflet">Leaflet</h2> <p><a href="https://leafletjs.com/">Leaflet</a> is created by Ukrainian software engineer <a href="https://agafonkin.com/">Volodymyr Agafonkin</a>, allowing interactive maps to be embedded in webpages. With support for <a href="https://geojson.org/">GeoJSON data</a>, Leaflet allows you to highlight specific regions, making it easy to visualize geographical information in detail.</p> <p>You can use the following code to load map information on <a href="https://www.openstreetmap.org/">OpenStreetMap</a>:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">geojson
</span><span class="sb">{
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "properties": {
        "name": "Crimea",
        "popupContent": "Occupied Crimea"
      },
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            [
              33.9,
              45.3
            ],
            [
              36.5,
              45.3
            ],
            [
              36.5,
              44.4
            ],
            [
              33.9,
              44.4
            ],
            [
              33.9,
              45.3
            ]
          ]
        ]
      }
    },
    {
      "type": "Feature",
      "properties": {
        "name": "Donetsk",
        "popupContent": "Occupied Donetsk"
      },
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            [
              37.5,
              48.5
            ],
            [
              39.5,
              48.5
            ],
            [
              39.5,
              47.5
            ],
            [
              37.5,
              47.5
            ],
            [
              37.5,
              48.5
            ]
          ]
        ]
      }
    },
    {
      "type": "Feature",
      "properties": {
        "name": "Luhansk",
        "popupContent": "Occupied Luhansk"
      },
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            [
              38.5,
              49.5
            ],
            [
              40.5,
              49.5
            ],
            [
              40.5,
              48.5
            ],
            [
              38.5,
              48.5
            ],
            [
              38.5,
              49.5
            ]
          ]
        ]
      }
    },
    {
      "type": "Feature",
      "properties": {
        "name": "Kherson",
        "popupContent": "Occupied Kherson"
      },
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            [
              32.3,
              47.3
            ],
            [
              34.3,
              47.3
            ],
            [
              34.3,
              46.3
            ],
            [
              32.3,
              46.3
            ],
            [
              32.3,
              47.3
            ]
          ]
        ]
      }
    },
    {
      "type": "Feature",
      "properties": {
        "name": "Zaporizhzhia",
        "popupContent": "Occupied Zaporizhzhia"
      },
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            [
              34.3,
              48
            ],
            [
              36.3,
              48
            ],
            [
              36.3,
              47
            ],
            [
              34.3,
              47
            ],
            [
              34.3,
              48
            ]
          ]
        ]
      }
    }
  ]
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>The rendered map below highlights the regions of Ukraine that have been illegally occupied by Russia over the years, including Crimea and the four eastern regions:</p> <pre><code class="language-geojson">{
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "properties": {
        "name": "Crimea",
        "popupContent": "Occupied Crimea"
      },
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            [
              33.9,
              45.3
            ],
            [
              36.5,
              45.3
            ],
            [
              36.5,
              44.4
            ],
            [
              33.9,
              44.4
            ],
            [
              33.9,
              45.3
            ]
          ]
        ]
      }
    },
    {
      "type": "Feature",
      "properties": {
        "name": "Donetsk",
        "popupContent": "Occupied Donetsk"
      },
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            [
              37.5,
              48.5
            ],
            [
              39.5,
              48.5
            ],
            [
              39.5,
              47.5
            ],
            [
              37.5,
              47.5
            ],
            [
              37.5,
              48.5
            ]
          ]
        ]
      }
    },
    {
      "type": "Feature",
      "properties": {
        "name": "Luhansk",
        "popupContent": "Occupied Luhansk"
      },
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            [
              38.5,
              49.5
            ],
            [
              40.5,
              49.5
            ],
            [
              40.5,
              48.5
            ],
            [
              38.5,
              48.5
            ],
            [
              38.5,
              49.5
            ]
          ]
        ]
      }
    },
    {
      "type": "Feature",
      "properties": {
        "name": "Kherson",
        "popupContent": "Occupied Kherson"
      },
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            [
              32.3,
              47.3
            ],
            [
              34.3,
              47.3
            ],
            [
              34.3,
              46.3
            ],
            [
              32.3,
              46.3
            ],
            [
              32.3,
              47.3
            ]
          ]
        ]
      }
    },
    {
      "type": "Feature",
      "properties": {
        "name": "Zaporizhzhia",
        "popupContent": "Occupied Zaporizhzhia"
      },
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            [
              34.3,
              48
            ],
            [
              36.3,
              48
            ],
            [
              36.3,
              47
            ],
            [
              34.3,
              47
            ],
            [
              34.3,
              48
            ]
          ]
        ]
      }
    }
  ]
}
</code></pre> <hr/> <h2 id="chartjs-echarts-and-vega-lite">Chartjs, Echarts and Vega-Lite</h2> <p><a href="https://www.chartjs.org/">Chart.js</a> is a versatile JavaScript library for creating responsive and interactive charts. Supporting multiple chart types like bar, line, pie, and radar, it‚Äôs an ideal tool for visualizing data directly in webpages.</p> <p>Here‚Äôs an example of a JSON-style configuration that creates a bar chart in Chart.js:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>```chartjs
{
  "type": "bar",
  "data": {
    "labels": ["2017", "2018", "2019", "2020", "2021"],
    "datasets": [
      {
        "label": "Population (millions)",
        "data": [12, 15, 13, 14, 16],
        "backgroundColor": "rgba(54, 162, 235, 0.6)",
        "borderColor": "rgba(54, 162, 235, 1)",
        "borderWidth": 1
      }
    ]
  },
  "options": {
    "scales": {
      "y": {
        "beginAtZero": true
      }
    }
  }
}
```
</code></pre></div></div> <p>The rendered bar chart illustrates population data from 2017 to 2021:</p> <pre><code class="language-chartjs">{
  "type": "bar",
  "data": {
    "labels": ["2017", "2018", "2019", "2020", "2021"],
    "datasets": [
      {
        "label": "Population (millions)",
        "data": [12, 15, 13, 14, 16],
        "backgroundColor": "rgba(54, 162, 235, 0.6)",
        "borderColor": "rgba(54, 162, 235, 1)",
        "borderWidth": 1
      }
    ]
  },
  "options": {
    "scales": {
      "y": {
        "beginAtZero": true
      }
    }
  }
}
</code></pre> <hr/> <p><a href="https://echarts.apache.org/">ECharts</a> is a powerful visualization library from <a href="https://www.apache.org/">Apache</a> that supports a wide range of interactive charts, including more advanced types such as scatter plots, heatmaps, and geographic maps.</p> <p>The following JSON configuration creates a visually enhanced line chart that displays monthly sales data for two products.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>```echarts
{
  "title": {
    "text": "Monthly Sales Comparison",
    "left": "center"
  },
  "tooltip": {
    "trigger": "axis",
    "backgroundColor": "rgba(50, 50, 50, 0.7)",
    "borderColor": "#777",
    "borderWidth": 1,
    "textStyle": {
      "color": "#fff"
    }
  },
  "legend": {
    "data": ["Product A", "Product B"],
    "top": "10%"
  },
  "xAxis": {
    "type": "category",
    "data": ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
    "axisLine": {
      "lineStyle": {
        "color": "#888"
      }
    }
  },
  "yAxis": {
    "type": "value",
    "axisLine": {
      "lineStyle": {
        "color": "#888"
      }
    },
    "splitLine": {
      "lineStyle": {
        "type": "dashed"
      }
    }
  },
  "series": [
    {
      "name": "Product A",
      "type": "line",
      "smooth": true,
      "data": [820, 932, 901, 934, 1290, 1330, 1320, 1400, 1450, 1500, 1600, 1650],
      "itemStyle": {
        "color": "#5470C6"
      },
      "lineStyle": {
        "width": 3
      },
      "areaStyle": {
        "color": {
          "type": "linear",
          "x": 0,
          "y": 0,
          "x2": 0,
          "y2": 1,
          "colorStops": [
            { "offset": 0, "color": "rgba(84, 112, 198, 0.5)" },
            { "offset": 1, "color": "rgba(84, 112, 198, 0)" }
          ]
        }
      },
      "emphasis": {
        "focus": "series"
      }
    },
    {
      "name": "Product B",
      "type": "line",
      "smooth": true,
      "data": [620, 732, 701, 734, 1090, 1130, 1120, 1200, 1250, 1300, 1400, 1450],
      "itemStyle": {
        "color": "#91CC75"
      },
      "lineStyle": {
        "width": 3
      },
      "areaStyle": {
        "color": {
          "type": "linear",
          "x": 0,
          "y": 0,
          "x2": 0,
          "y2": 1,
          "colorStops": [
            { "offset": 0, "color": "rgba(145, 204, 117, 0.5)" },
            { "offset": 1, "color": "rgba(145, 204, 117, 0)" }
          ]
        }
      },
      "emphasis": {
        "focus": "series"
      }
    }
  ]
}
```
</code></pre></div></div> <p>The rendered output is shown below, and you can also interact with it using your mouse:</p> <pre><code class="language-echarts">{
  "title": {
    "text": "Monthly Sales Comparison",
    "left": "center"
  },
  "tooltip": {
    "trigger": "axis",
    "backgroundColor": "rgba(50, 50, 50, 0.7)",
    "borderColor": "#777",
    "borderWidth": 1,
    "textStyle": {
      "color": "#fff"
    }
  },
  "legend": {
    "data": ["Product A", "Product B"],
    "top": "10%"
  },
  "xAxis": {
    "type": "category",
    "data": ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
    "axisLine": {
      "lineStyle": {
        "color": "#888"
      }
    }
  },
  "yAxis": {
    "type": "value",
    "axisLine": {
      "lineStyle": {
        "color": "#888"
      }
    },
    "splitLine": {
      "lineStyle": {
        "type": "dashed"
      }
    }
  },
  "series": [
    {
      "name": "Product A",
      "type": "line",
      "smooth": true,
      "data": [820, 932, 901, 934, 1290, 1330, 1320, 1400, 1450, 1500, 1600, 1650],
      "itemStyle": {
        "color": "#5470C6"
      },
      "lineStyle": {
        "width": 3
      },
      "areaStyle": {
        "color": {
          "type": "linear",
          "x": 0,
          "y": 0,
          "x2": 0,
          "y2": 1,
          "colorStops": [
            { "offset": 0, "color": "rgba(84, 112, 198, 0.5)" },
            { "offset": 1, "color": "rgba(84, 112, 198, 0)" }
          ]
        }
      },
      "emphasis": {
        "focus": "series"
      }
    },
    {
      "name": "Product B",
      "type": "line",
      "smooth": true,
      "data": [620, 732, 701, 734, 1090, 1130, 1120, 1200, 1250, 1300, 1400, 1450],
      "itemStyle": {
        "color": "#91CC75"
      },
      "lineStyle": {
        "width": 3
      },
      "areaStyle": {
        "color": {
          "type": "linear",
          "x": 0,
          "y": 0,
          "x2": 0,
          "y2": 1,
          "colorStops": [
            { "offset": 0, "color": "rgba(145, 204, 117, 0.5)" },
            { "offset": 1, "color": "rgba(145, 204, 117, 0)" }
          ]
        }
      },
      "emphasis": {
        "focus": "series"
      }
    }
  ]
}
</code></pre> <hr/> <p><a href="https://vega.github.io/vega-lite/">Vega-Lite</a> is a declarative visualization grammar that allows users to create, share, and customize a wide range of interactive data visualizations. The following JSON configuration generates a straightforward bar chart:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>```vega_lite
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "width": 400,
  "height": 200,
  "padding": 5,

  "data": [
    {
      "name": "table",
      "values": [
        {"category": "A", "value": 28},
        {"category": "B", "value": 55},
        {"category": "C", "value": 43},
        {"category": "D", "value": 91},
        {"category": "E", "value": 81},
        {"category": "F", "value": 53},
        {"category": "G", "value": 19},
        {"category": "H", "value": 87}
      ]
    }
  ],

  "scales": [
    {
      "name": "xscale",
      "type": "band",
      "domain": {"data": "table", "field": "category"},
      "range": "width",
      "padding": 0.1
    },
    {
      "name": "yscale",
      "type": "linear",
      "domain": {"data": "table", "field": "value"},
      "nice": true,
      "range": "height"
    }
  ],

  "axes": [
    {"orient": "bottom", "scale": "xscale"},
    {"orient": "left", "scale": "yscale"}
  ],

  "marks": [
    {
      "type": "rect",
      "from": {"data": "table"},
      "encode": {
        "enter": {
          "x": {"scale": "xscale", "field": "category"},
          "width": {"scale": "xscale", "band": 0.8},
          "y": {"scale": "yscale", "field": "value"},
          "y2": {"scale": "yscale", "value": 0},
          "fill": {"value": "steelblue"}
        },
        "update": {
          "fillOpacity": {"value": 1}
        },
        "hover": {
          "fill": {"value": "orange"}
        }
      }
    }
  ]
}
```
</code></pre></div></div> <p>The rendered output shows a clean and simple bar chart with a hover effectÔºö</p> <pre><code class="language-vega_lite">{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "width": 400,
  "height": 200,
  "padding": 5,

  "data": [
    {
      "name": "table",
      "values": [
        {"category": "A", "value": 28},
        {"category": "B", "value": 55},
        {"category": "C", "value": 43},
        {"category": "D", "value": 91},
        {"category": "E", "value": 81},
        {"category": "F", "value": 53},
        {"category": "G", "value": 19},
        {"category": "H", "value": 87}
      ]
    }
  ],

  "scales": [
    {
      "name": "xscale",
      "type": "band",
      "domain": {"data": "table", "field": "category"},
      "range": "width",
      "padding": 0.1
    },
    {
      "name": "yscale",
      "type": "linear",
      "domain": {"data": "table", "field": "value"},
      "nice": true,
      "range": "height"
    }
  ],

  "axes": [
    {"orient": "bottom", "scale": "xscale"},
    {"orient": "left", "scale": "yscale"}
  ],

  "marks": [
    {
      "type": "rect",
      "from": {"data": "table"},
      "encode": {
        "enter": {
          "x": {"scale": "xscale", "field": "category"},
          "width": {"scale": "xscale", "band": 0.8},
          "y": {"scale": "yscale", "field": "value"},
          "y2": {"scale": "yscale", "value": 0},
          "fill": {"value": "steelblue"}
        },
        "update": {
          "fillOpacity": {"value": 1}
        },
        "hover": {
          "fill": {"value": "orange"}
        }
      }
    }
  ]
}
</code></pre> <hr/> <h2 id="tikz">TikZ</h2> <p><a href="https://tikz.net/">TikZ</a> is a powerful LaTeX-based drawing tool powered by <a href="https://tikzjax.com/">TikZJax</a>. You can easily port TikZ drawings from papers, posters, and notes. For example, we can use the following code to illustrate Euler‚Äôs formula $ e^{i \theta} = \cos \theta + i \sin \theta $:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"text/tikz"</span><span class="nt">&gt;</span>
<span class="se">\b</span>egin{tikzpicture}
    <span class="se">\f</span>illdraw[fill=cyan!10, draw=blue, thick] (0,0) circle (2cm);<span class="sb">

    \draw[-&gt;, thick] (-2.5,0) -- (2.5,0) node[right] {Re};
    \draw[-&gt;, thick] (0,-2.5) -- (0,2.5) node[above] {Im};

    \draw[-&gt;, thick, color=purple] (0,0) -- (1.5,1.5);
    \node[color=purple] at (1.1, 1.7) {$e^{i\theta}$};

    \draw[thick] (0.7,0) arc (0:45:0.7);
    \node at (0.9, 0.3) {$\theta$};

    \draw[dashed, color=gray] (1.5,1.5) -- (1.5,0) node[below, black] {$\cos \theta$};
    \draw[dashed, color=gray] (1.5,1.5) -- (0,1.5) node[left, black] {$\sin \theta$};
    \node at (2.2, 0) [below] {1}; 
    \node at (0, 2.2) [left] {$i$}; 
    \node at (1.5,1.5) [above right, color=blue] {$(\cos \theta \, \sin \theta)$}; 
</span><span class="se">\e</span>nd{tikzpicture}
<span class="nt">&lt;/script&gt;</span>
</code></pre></div></div> <p>The rendered output is shown below, displayed as a vector graphicÔºö</p> <script type="text/tikz">
\begin{tikzpicture}
    \filldraw[fill=cyan!10, draw=blue, thick] (0,0) circle (2cm);

    \draw[->, thick] (-2.5,0) -- (2.5,0) node[right] {Re};
    \draw[->, thick] (0,-2.5) -- (0,2.5) node[above] {Im};

    \draw[->, thick, color=purple] (0,0) -- (1.5,1.5);
    \node[color=purple] at (1.1, 1.7) {$e^{i\theta}$};

    \draw[thick] (0.7,0) arc (0:45:0.7);
    \node at (0.9, 0.3) {$\theta$};

    \draw[dashed, color=gray] (1.5,1.5) -- (1.5,0) node[below, black] {$\cos \theta$};
    \draw[dashed, color=gray] (1.5,1.5) -- (0,1.5) node[left, black] {$\sin \theta$};
    \node at (2.2, 0) [below] {1}; 
    \node at (0, 2.2) [left] {$i$}; 
    \node at (1.5,1.5) [above right, color=blue] {$(\cos \theta \, \sin \theta)$}; 
\end{tikzpicture}
</script> <hr/> <h2 id="typograms">Typograms</h2> <p><a href="https://google.github.io/typograms/">Typograms</a> are a way of combining text and graphics to convey information in a clear and visually engaging manner. Typograms are particularly effective for illustrating simple diagrams, charts, and concept visuals where text and graphics are closely integrated. The following example demonstrates a simple Typogram:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>```typograms
             ___________________
            /                  /|
           /__________________/ |
          |                  |  |
          |     Distill      |  |
          |                  |  |
          |                  | /
          |__________________|/
```
</code></pre></div></div> <p>The rendered output is shown belowÔºö</p> <pre><code class="language-typograms">             ___________________
            /                  /|
           /__________________/ |
          |                  |  |
          |     Distill      |  |
          |                  |  |
          |                  | /
          |__________________|/
</code></pre> <hr/> <h2 id="layouts">Layouts</h2> <p>The main text column is referred to as the body. It is the assumed layout of any direct descendants of the <code class="language-plaintext highlighter-rouge">d-article</code> element.</p> <div class="fake-img l-body"> <p>.l-body</p> </div> <p>For images you want to display a little larger, try <code class="language-plaintext highlighter-rouge">.l-page</code>:</p> <div class="fake-img l-page"> <p>.l-page</p> </div> <p>All of these have an outset variant if you want to poke out from the body text a little bit. For instance:</p> <div class="fake-img l-body-outset"> <p>.l-body-outset</p> </div> <div class="fake-img l-page-outset"> <p>.l-page-outset</p> </div> <p>Occasionally you‚Äôll want to use the full browser width. For this, use <code class="language-plaintext highlighter-rouge">.l-screen</code>. You can also inset the element a little from the edge of the browser by using the inset variant.</p> <div class="fake-img l-screen"> <p>.l-screen</p> </div> <div class="fake-img l-screen-inset"> <p>.l-screen-inset</p> </div> <p>The final layout is for marginalia, asides, and footnotes. It does not interrupt the normal flow of <code class="language-plaintext highlighter-rouge">.l-body</code> sized text except on mobile screen sizes.</p> <div class="fake-img l-gutter"> <p>.l-gutter</p> </div> <hr/> <h2 id="other-typography">Other Typography?</h2> <p>Emphasis, aka italics, with <em>asterisks</em> (<code class="language-plaintext highlighter-rouge">*asterisks*</code>) or <em>underscores</em> (<code class="language-plaintext highlighter-rouge">_underscores_</code>).</p> <p>Strong emphasis, aka bold, with <strong>asterisks</strong> or <strong>underscores</strong>.</p> <p>Combined emphasis with <strong>asterisks and <em>underscores</em></strong>.</p> <p>Strikethrough uses two tildes. <del>Scratch this.</del></p> <ol> <li>First ordered list item</li> <li>Another item ‚ãÖ‚ãÖ* Unordered sub-list.</li> <li>Actual numbers don‚Äôt matter, just that it‚Äôs a number ‚ãÖ‚ãÖ1. Ordered sub-list</li> <li>And another item.</li> </ol> <p>‚ãÖ‚ãÖ‚ãÖYou can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we‚Äôll use three here to also align the raw Markdown).</p> <p>‚ãÖ‚ãÖ‚ãÖTo have a line break without a paragraph, you will need to use two trailing spaces.‚ãÖ‚ãÖ ‚ãÖ‚ãÖ‚ãÖNote that this line is separate, but within the same paragraph.‚ãÖ‚ãÖ ‚ãÖ‚ãÖ‚ãÖ(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)</p> <ul> <li> <p>Unordered list can use asterisks</p> </li> <li> <p>Or minuses</p> </li> <li> <p>Or pluses</p> </li> </ul> <p><a href="https://www.google.com">I‚Äôm an inline-style link</a></p> <p><a href="https://www.google.com" title="Google's Homepage">I‚Äôm an inline-style link with title</a></p> <p><a href="https://www.mozilla.org">I‚Äôm a reference-style link</a></p> <p><a href="http://slashdot.org">You can use numbers for reference-style link definitions</a></p> <p>Or leave it empty and use the <a href="http://www.reddit.com">link text itself</a>.</p> <p>URLs and URLs in angle brackets will automatically get turned into links. http://www.example.com or <a href="http://www.example.com">http://www.example.com</a> and sometimes example.com (but not on Github, for example).</p> <p>Some text to show that the reference links can follow later.</p> <p>Here‚Äôs our logo (hover to see the title text):</p> <p>Inline-style: <img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 1"/></p> <p>Reference-style: <img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 2"/></p> <p>Inline <code class="language-plaintext highlighter-rouge">code</code> has <code class="language-plaintext highlighter-rouge">back-ticks around</code> it.</p> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">s</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">JavaScript syntax highlighting</span><span class="dl">"</span><span class="p">;</span>
<span class="nf">alert</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">s</span> <span class="o">=</span> <span class="sh">"</span><span class="s">Python syntax highlighting</span><span class="sh">"</span>
<span class="k">print</span> <span class="n">s</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>No language indicated, so no syntax highlighting.
But let's throw in a &lt;b&gt;tag&lt;/b&gt;.
</code></pre></div></div> <p>Colons can be used to align columns.</p> <table> <thead> <tr> <th>Tables</th> <th style="text-align: center">Are</th> <th style="text-align: right">Cool</th> </tr> </thead> <tbody> <tr> <td>col 3 is</td> <td style="text-align: center">right-aligned</td> <td style="text-align: right">$1600</td> </tr> <tr> <td>col 2 is</td> <td style="text-align: center">centered</td> <td style="text-align: right">$12</td> </tr> <tr> <td>zebra stripes</td> <td style="text-align: center">are neat</td> <td style="text-align: right">$1</td> </tr> </tbody> </table> <p>There must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don‚Äôt need to make the raw Markdown line up prettily. You can also use inline Markdown.</p> <table> <thead> <tr> <th>Markdown</th> <th>Less</th> <th>Pretty</th> </tr> </thead> <tbody> <tr> <td><em>Still</em></td> <td><code class="language-plaintext highlighter-rouge">renders</code></td> <td><strong>nicely</strong></td> </tr> <tr> <td>1</td> <td>2</td> <td>3</td> </tr> </tbody> </table> <blockquote> <p>Blockquotes are very handy in email to emulate reply text. This line is part of the same quote.</p> </blockquote> <p>Quote break.</p> <blockquote> <p>This is a very long line that will still be quoted properly when it wraps. Oh boy let‚Äôs keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can <em>put</em> <strong>Markdown</strong> into a blockquote.</p> </blockquote> <p>Here‚Äôs a line for us to start with.</p> <p>This line is separated from the one above by two newlines, so it will be a <em>separate paragraph</em>.</p> <p>This line is also a separate paragraph, but‚Ä¶ This line is only separated by a single newline, so it‚Äôs a separate line in the <em>same paragraph</em>.</p>]]></content><author><name>Albert Einstein</name></author><category term="distill"/><category term="formatting"/><summary type="html"><![CDATA[an example of a distill-style blog post and main elements]]></summary></entry></feed>